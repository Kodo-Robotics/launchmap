tests:
  - name: include_literal_file_xml
    description: <include> with direct string file path
    input: |
      <?xml version="1.0"?>
      <launch>
        <include file="sub_launch.py"/>
      </launch>
    expected:
      includes:
        - launch_description_source: sub_launch.py
          launch_arguments: {}
          included: {}
  
  - name: include_with_launch_arguments_xml
    description: <include> with forwarded arguments using LaunchConfiguration
    input: |
      <?xml version="1.0"?>
      <launch>
        <arg name="map_file" default="map.yaml"/>
        <include file="mapper_launch.py">
          <arg name="map" value="$(var map_file)"/>
        </include>
      </launch>
    expected:
      arguments:
        - name: map_file
          default_value: map.yaml
      includes:
        - launch_description_source: mapper_launch.py
          launch_arguments:
            map: "${LaunchConfiguration:map_file}"
          included: {}
      launch_argument_usages:
        - argument: map_file
          path: includes[0].launch_arguments.map
      undeclared_launch_configurations: []
  
  - name: include_with_find_pkg_share_xml
    description: Uses find-pkg-share to locate a launch file
    input: |
      <?xml version="1.0"?>
      <launch>
        <include file="$(find-pkg-share demo_pkg)/launch/sub_launch.py"/>
      </launch>
    expected:
      includes:
        - launch_description_source: "${FindPackageShare:demo_pkg}/launch/sub_launch.py"
          launch_arguments: {}
          included: {}